{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport Context from \"context/UserContext\";\nimport loginService from 'services/login';\nexport default function useUser() {\n  _s();\n\n  const {\n    jwt,\n    setJWT\n  } = useContext(Context);\n  const [state, setState] = useState({\n    loading: false,\n    error: false,\n    name: ''\n  });\n  useEffect(() => {}, [jwt, state]);\n  const login = useCallback(({\n    username,\n    password\n  }) => {\n    setState({\n      loading: true,\n      error: false\n    }); //console.log('pasword desde useUser: ', password);\n    //console.log('tipo',typeof(password));\n\n    loginService(username, password).then(jwt => {\n      window.sessionStorage.setItem('jwt', jwt);\n      setState({\n        loading: false,\n        error: false,\n        name: username\n      });\n      console.log('jwt desde useUser', jwt);\n      setJWT(jwt); //localStorage.setItem('userName', username)\n\n      window.sessionStorage.setItem('userName', username);\n    }).catch(err => {\n      window.sessionStorage.removeItem('jwt');\n      setState({\n        loading: false,\n        error: true\n      }); //localStorage.removeItem('userName')\n\n      window.sessionStorage.removeItem('userName');\n      console.log('error en el servicio de login!!!');\n      console.error(err);\n    });\n  }, [setJWT]);\n  const logout = useCallback(() => {\n    window.sessionStorage.removeItem('jwt');\n    console.log('jwt antes de cerrar sesion: ', jwt);\n    setJWT(null);\n    localStorage.removeItem('userName');\n    console.log('jwt despues de cerrar sesion: ', jwt);\n  }, [setJWT, jwt]);\n  return {\n    userName: state.name,\n    isLogged: Boolean(jwt),\n    isLoginLoading: state.loading,\n    hasLoginError: state.error,\n    login,\n    logout\n  };\n}\n\n_s(useUser, \"JCxXMSi1WvOLHotVUXa9Dm7I99o=\");","map":{"version":3,"sources":["/home/gma/Escritorio/TALLER/FINAL/proyecto-software-FRONTEND/src/hooks/useUser.js"],"names":["useCallback","useContext","useEffect","useState","Context","loginService","useUser","jwt","setJWT","state","setState","loading","error","name","login","username","password","then","window","sessionStorage","setItem","console","log","catch","err","removeItem","logout","localStorage","userName","isLogged","Boolean","isLoginLoading","hasLoginError"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA4D,OAA5D;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAgBP,UAAU,CAACG,OAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAACQ,IAAAA,OAAO,EAAG,KAAX;AAAkBC,IAAAA,KAAK,EAAC,KAAxB;AAA+BC,IAAAA,IAAI,EAAC;AAApC,GAAD,CAAlC;AAGAX,EAAAA,SAAS,CAAC,MAAM,CACb,CADM,EACL,CAACK,GAAD,EAAME,KAAN,CADK,CAAT;AAGA,QAAMK,KAAK,GAAGd,WAAW,CAAC,CAAC;AAACe,IAAAA,QAAD;AAAUC,IAAAA;AAAV,GAAD,KAAwB;AAC9CN,IAAAA,QAAQ,CAAC;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,KAAK,EAAC;AAArB,KAAD,CAAR,CAD8C,CAE9C;AACA;;AACAP,IAAAA,YAAY,CAACU,QAAD,EAAUC,QAAV,CAAZ,CACKC,IADL,CACUV,GAAG,IAAG;AACRW,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,KAA9B,EAAoCb,GAApC;AACAG,MAAAA,QAAQ,CAAC;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAgBC,QAAAA,KAAK,EAAC,KAAtB;AAA6BC,QAAAA,IAAI,EAACE;AAAlC,OAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCf,GAAhC;AACAC,MAAAA,MAAM,CAACD,GAAD,CAAN,CAJQ,CAKR;;AACAW,MAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,EAA0CL,QAA1C;AACH,KARL,EASKQ,KATL,CASWC,GAAG,IAAG;AACTN,MAAAA,MAAM,CAACC,cAAP,CAAsBM,UAAtB,CAAiC,KAAjC;AACAf,MAAAA,QAAQ,CAAC;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAgBC,QAAAA,KAAK,EAAC;AAAtB,OAAD,CAAR,CAFS,CAGT;;AACAM,MAAAA,MAAM,CAACC,cAAP,CAAsBM,UAAtB,CAAiC,UAAjC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACT,KAAR,CAAcY,GAAd;AACH,KAhBL;AAiBH,GArBwB,EAqBvB,CAAChB,MAAD,CArBuB,CAAzB;AAuBA,QAAMkB,MAAM,GAAG1B,WAAW,CAAC,MAAI;AAC3BkB,IAAAA,MAAM,CAACC,cAAP,CAAsBM,UAAtB,CAAiC,KAAjC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4Cf,GAA5C;AACAC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACAmB,IAAAA,YAAY,CAACF,UAAb,CAAwB,UAAxB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8Cf,GAA9C;AACH,GANyB,EAMvB,CAACC,MAAD,EAAQD,GAAR,CANuB,CAA1B;AASA,SAAM;AACFqB,IAAAA,QAAQ,EAAEnB,KAAK,CAACI,IADd;AAEFgB,IAAAA,QAAQ,EAAEC,OAAO,CAACvB,GAAD,CAFf;AAGFwB,IAAAA,cAAc,EAAEtB,KAAK,CAACE,OAHpB;AAIFqB,IAAAA,aAAa,EAAEvB,KAAK,CAACG,KAJnB;AAKFE,IAAAA,KALE;AAMFY,IAAAA;AANE,GAAN;AAQH;;GAhDuBpB,O","sourcesContent":["import { useCallback, useContext, useEffect, useState} from \"react\"\nimport Context from \"context/UserContext\"\nimport loginService from 'services/login'\n\n\nexport default function useUser(){\n    const {jwt, setJWT} = useContext(Context)\n    const [state, setState] = useState({loading : false, error:false, name:''})\n   \n    \n    useEffect(() => {\n      },[jwt, state]);\n\n    const login = useCallback(({username,password}) =>{\n        setState({loading:true, error:false})\n        //console.log('pasword desde useUser: ', password);\n        //console.log('tipo',typeof(password));\n        loginService(username,password)\n            .then(jwt =>{\n                window.sessionStorage.setItem('jwt',jwt)\n                setState({loading:false, error:false, name:username})\n                console.log('jwt desde useUser',jwt)\n                setJWT(jwt)\n                //localStorage.setItem('userName', username)\n                window.sessionStorage.setItem('userName', username)\n            })\n            .catch(err =>{\n                window.sessionStorage.removeItem('jwt')\n                setState({loading:false, error:true})\n                //localStorage.removeItem('userName')\n                window.sessionStorage.removeItem('userName')\n                console.log('error en el servicio de login!!!');\n                console.error(err)\n            })\n    },[setJWT])\n\n    const logout = useCallback(()=>{\n        window.sessionStorage.removeItem('jwt')\n        console.log('jwt antes de cerrar sesion: ', jwt );\n        setJWT(null)\n        localStorage.removeItem('userName')\n        console.log('jwt despues de cerrar sesion: ', jwt );\n    }, [setJWT,jwt])\n\n\n    return{\n        userName: state.name    ,\n        isLogged: Boolean(jwt),\n        isLoginLoading: state.loading,\n        hasLoginError: state.error,\n        login,\n        logout\n    }\n}"]},"metadata":{},"sourceType":"module"}